[
    {
        "fileName": "src/Spryker/Client/AvailabilityNotification/Dependency/Client/AvailabilityNotificationToZedRequestClientBridge.php",
        "description": "Bridges: Type should be defined for param `url` in method `Spryker\\Client\\AvailabilityNotification\\Dependency\\Client\\AvailabilityNotificationToZedRequestClientBridge::call()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/AvailabilityNotification/Dependency/Client/AvailabilityNotificationToZedRequestClientBridge.php",
        "description": "Bridges: Type should be defined for param `requestOptions` in method `Spryker\\Client\\AvailabilityNotification\\Dependency\\Client\\AvailabilityNotificationToZedRequestClientBridge::call()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/AvailabilityNotification/Dependency/Client/AvailabilityNotificationToZedRequestClientInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `call()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToGlossaryFacadeBridge.php",
        "description": "Bridges: Method `getTranslation()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToLocaleFacadeBridge.php",
        "description": "Bridges: Method `getCurrentLocale()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `idProductAbstract` in method `Spryker\\Zed\\AvailabilityNotification\\Dependency\\Facade\\AvailabilityNotificationToProductFacadeBridge::findProductAbstractById()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeBridge.php",
        "description": "Bridges: Method `findProductAbstractById()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeBridge.php",
        "description": "Bridges: Method `getProductUrl()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `concreteSku` in method `Spryker\\Zed\\AvailabilityNotification\\Dependency\\Facade\\AvailabilityNotificationToProductFacadeBridge::getProductConcrete()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeBridge.php",
        "description": "Bridges: Method `getProductConcrete()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\AvailabilityNotification\\Dependency\\Facade\\AvailabilityNotificationToProductFacadeBridge::hasProductConcrete()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `findProductAbstractById()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getProductUrl()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getProductConcrete()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToProductFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `hasProductConcrete()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Facade/AvailabilityNotificationToStoreFacadeBridge.php",
        "description": "Bridges: Method `getCurrentStore()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Service/AvailabilityNotificationToUtilTextServiceBridge.php",
        "description": "Bridges: Type should be defined for param `length` in method `Spryker\\Zed\\AvailabilityNotification\\Dependency\\Service\\AvailabilityNotificationToUtilTextServiceBridge::generateRandomString()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityNotification/Dependency/Service/AvailabilityNotificationToUtilTextServiceInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `generateRandomString()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
